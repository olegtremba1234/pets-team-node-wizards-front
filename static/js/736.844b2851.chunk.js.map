{"version":3,"file":"static/js/736.844b2851.chunk.js","mappings":"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","sources":["components/Auth/AuthValidation/ErrorMessageValidation.styled.js","components/Auth/AuthValidation/RegisterValidation.js","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.js","pages/RegisterPage.jsx","vars/device.js"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from 'vars/device';\n\nexport const ErrorText = styled.p`\n  position: absolute;\n\n  margin-top: 1px;\n  margin-left: 16px;\n  font-size: 11px;\n  color: red;\n  @media ${device.tablet} {\n    margin-left: 32px;\n    max-width: 448px;\n  }\n`;\n","import { ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ErrorText } from './ErrorMessageValidation.styled';\n\nconst nameRules = /^[aA-zZ\\s]+$/;\nconst nameRules2 = /^[^\\s()-]*$/;\nconst passwordRules = /^(\\S+$)/g;\nconst emailRules = /^(?!-)(?!.*@[^,]*,)/;\nconst emailRules2 = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\nconst emailRules3 = /^[\\w-.]{2,63}@([\\w-]+\\.)+[\\w-]{2,4}$/;\nconst cityRules = /^()(\\w+(,|\\s)\\s*)+\\w+$/;\nconst cityRulesOnlyLetters = /^[a-zA-Z\\s]{3,},[a-zA-Z\\s]{4,}$/;\n\nexport const stepOneRegisterSchema = yup.object().shape({\n  email: yup\n    .string()\n    .min(6, 'Must be more than 6 characters')\n    .max(63, 'Maximum number of characters 63')\n    .email('Please enter a valid email')\n    .matches(emailRules, 'Please enter a valid email')\n    .matches(emailRules2, 'Only Latin letters')\n    .matches(emailRules3, 'Min 2 and max 63 characters before the @')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(7, 'Your password must be more than 7 characters')\n    .max(32, 'Password is too long')\n    .matches(passwordRules, 'Any characters except spaces')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])/,\n      'Must contain one uppercase, one lowercase'\n    )\n    .matches(/^(?=.{7,32}$)\\D*\\d/, 'Must contain one number')\n    .required('Password is a required field'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Please enter the password again'),\n});\n\nexport const stepTwoRegisterSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Must be more than 2 characters')\n    .max(16, 'Maximum number of characters 16')\n    .matches(nameRules, 'Only latin characters are allowed for this field')\n    .matches(nameRules2, 'No spaces in the name')\n    .required('Name is a required field')\n    .trim(),\n  city: yup\n    .string()\n    .required('City, region is a required field')\n    .min(5, 'Format must be City, region. For example: Brovary,Kyiv')\n    .max(60, 'Maximum number of characters 16')\n    .matches(cityRules, 'Format must be City,region. For example: Brovary,Kyiv')\n    .matches(nameRules2, 'No spaces in the City or region')\n    .matches(cityRulesOnlyLetters, 'Region name only letters'),\n  phone: yup\n    .string()\n    .min(13, 'Please enter a valid phone number')\n    .required('Phone is a required field'),\n});\n\nexport const FormError = ({ name, message }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nimport register_bg_step1_mob from '../../../images/bg-images/mobile/register_bg_step1_mob.png';\nimport register_bg_step2_mob from '../../../images/bg-images/mobile/register_bg_step2_mob.png';\nimport tablet_vector_1 from '../../../images/bg-images/tablet/tablet_vector_1.png';\nimport tablet_vector_2 from '../../../images/bg-images/tablet/tablet_vector_2.png';\nimport tablet_vector_3 from '../../../images/bg-images/tablet/tablet_vector_3.png';\nimport tablet_vector_4 from '../../../images/bg-images/tablet/tablet_vector_4.png';\nimport tablet_vector_5 from '../../../images/bg-images/tablet/tablet_vector_5.png';\nimport tablet_vector_6 from '../../../images/bg-images/tablet/tablet_vector_6.png';\nimport desktop_vector_1 from '../../../images/bg-images/desktop/desktop_vector_1.png';\nimport desktop_vector_2 from '../../../images/bg-images/desktop/desktop_vector_2.png';\nimport desktop_vector_3 from '../../../images/bg-images/desktop/desktop_vector_3.png';\n\nimport { device } from 'vars/device';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport { BiShow } from 'react-icons/bi';\nimport { BiHide } from 'react-icons/bi';\n\nexport const PhoneInputField = props => {\n  return (\n    <PhoneInput\n      regions={['europe']}\n      country=\"ua\"\n      value={props.value}\n      onChange={props.onChange}\n      inputStyle={{\n        fontFamily: 'Manrope',\n        fontWeight: '400',\n        color: 'rgba(17, 17, 17, 0.6)',\n        letterSpacing: '0.04em',\n        width: '200px',\n        background: '#FDF7F2',\n        outline: 0,\n        border: 0,\n        padding: 0,\n        margin: 0,\n        height: '100%',\n        left: '48px',\n      }}\n      containerStyle={{\n        marginTop: '16px',\n        paddingTop: '12px',\n        paddingBottom: '12px',\n        paddingLeft: '10px',\n        background: '#FDF7F2',\n        border: '1px solid rgba(245, 146, 86, 0.5)',\n        borderRadius: '40px',\n        textAlign: 'left',\n      }}\n      buttonStyle={{\n        background: '#FDF7F2',\n        border: 0,\n        color: 'rgba(17, 17, 17, 0.6)',\n        borderRadius: '50%',\n      }}\n      dropdownStyle={{\n        height: '200px',\n        color: '#000000',\n        background: '#FDF7F2',\n        textAlign: 'left',\n        borderRadius: '6px',\n      }}\n    />\n  );\n};\n\nexport const SectionRegisterForm = styled.section`\n  min-height: calc(100vh - 100px);\n  background-color: ${props => props.theme.backgrounds.input};\n  background-image: ${props =>\n    props.currentStep === 0\n      ? `url(${register_bg_step1_mob})`\n      : `url(${register_bg_step2_mob})`};\n  background-size: 'cover';\n  background-position: left 50% bottom 0px;\n  background-repeat: no-repeat;\n  @media ${device.tablet} {\n    min-height: calc(100vh - 237px);\n    min-height: ${props =>\n      props.currentStep === 0 ? `calc(100vh - 237px)` : `calc(100vh - 220px)`};\n    margin-top: ${props => (props.currentStep === 0 ? `169px` : `152px`)};\n    background-image: url(${tablet_vector_3}), url(${tablet_vector_2}),\n      url(${tablet_vector_4}), url(${tablet_vector_1}), url(${tablet_vector_5}),\n      url(${tablet_vector_6});\n    background-position: left 0 bottom 0, right 0 bottom 0, right 0 bottom 0,\n      right 0 bottom 0, left 163px bottom 163px, left 24px bottom 256px;\n  }\n  @media ${device.desktop} {\n    min-height: calc(100vh - 110px);\n    margin-top: ${props => (props.currentStep === 0 ? `46px` : `44px`)};\n    background-image: url(${desktop_vector_1}), url(${desktop_vector_2}),\n      url(${desktop_vector_3}), url(${tablet_vector_5}), url(${tablet_vector_6});\n    background-position: right 305px bottom 0, right 96px bottom 0,\n      right 0 bottom 0, left 258px bottom 131px, left 32px bottom 248px;\n  }\n`;\n\nexport const RegisterFormContainer = styled.div`\n  max-width: 320px;\n  margin: 0px auto;\n  padding-left: 20px;\n  padding-right: 20px;\n  @media ${device.tablet} {\n    max-width: 768px;\n    padding: 0px 80px;\n  }\n  @media ${device.desktop} {\n    max-width: 1280px;\n    padding: 0px 331px;\n  }\n`;\n\nexport const RegisterFormBox = styled.div`\n  top: 40px;\n  text-align: center;\n  @media ${device.tablet} {\n    background-color: ${props => props.theme.backgrounds.bodySecondary};\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    padding-top: 60px;\n    padding-bottom: 40px;\n    padding-right: 80px;\n    padding-left: 80px;\n  }\n  @media ${device.desktop} {\n    padding-bottom: 60px;\n  }\n`;\n\nexport const RegisterTitle = styled.h1`\n  margin-bottom: 40px;\n  font-family: 'Manrope';\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 33px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  color: ${props => props.theme.fontColors.primary};\n  @media ${device.tablet} {\n    font-family: 'Manrope';\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 49px;\n  }\n  @media ${device.desktop} {\n  }\n`;\n\nexport const FormInput = styled(Field)`\n  display: block;\n  font-family: 'Manrope';\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 19px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  width: 100%;\n  margin-top: 16px;\n  padding-top: 11px;\n  padding-bottom: 12px;\n  padding-left: 14px;\n  padding-right: 56px;\n  color: ${props => props.theme.fontColors.inputTextColor};\n  outline: none;\n  background-color: ${props => props.theme.backgrounds.input};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  transition: transform ${props => props.theme.transition.first};\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n    border: 1px solid ${p => p.theme.hoverButtonColor.primary};\n  }\n  @media ${device.tablet} {\n    font-family: 'Manrope';\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 25px;\n    padding-top: 14px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n  }\n`;\n\nexport const WrapInputPassword = styled.div`\n  position: relative;\n`;\n\nexport const ShowPasswordIcon = styled(BiShow)`\n  position: absolute;\n  right: 20px;\n  top: 8.5px;\n  color: #f59256;\n  width: 26px;\n  height: 26px;\n  @media ${device.tablet} {\n    top: 10px;\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nexport const HidePasswordIcon = styled(BiHide)`\n  position: absolute;\n  right: 20px;\n  top: 8.5px;\n  color: #f59256;\n  width: 26px;\n  height: 26px;\n  @media ${device.tablet} {\n    top: 10px;\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nexport const NextFormRegisterBtn = styled.button`\n  margin-top: ${props => (props.currentStep === 0 ? '40px' : '28px')};\n  width: 100%;\n  color: ${props => props.theme.fontColors.white};\n  background-color: ${props =>\n    props.disabled ? '#A0A0A0' : props.theme.backgrounds.buttonPrimary};\n  border-radius: 40px;\n  padding-top: 6.5px;\n  padding-bottom: 6.5px;\n  font-family: 'Manrope';\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  outline: none;\n  border: 2px solid #f59256;\n  border: ${props =>\n    props.disabled ? '2px solid #A0A0A0' : '2px solid #f59256'};\n  transition: transform ${props => props.theme.transition.first};\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    border: ${props =>\n      props.disabled ? '2px solid #A0A0A0' : '2px solid #FF6101'};\n  }\n  &:hover {\n    transform: scale(1.03);\n  }\n\n  @media ${device.tablet} {\n    margin-top: 40px;\n  }\n  @media ${device.desktop} {\n    padding-top: 10.5px;\n    padding-bottom: 10.5px;\n  }\n`;\n\nexport const BackFormRegisterBtn = styled.button`\n  margin-top: 12px;\n  width: 100%;\n  color: ${props => props.theme.fontColors.secondary};\n  background-color: ${props => props.theme.backgrounds.bodyPrimary};\n  border: 2px solid #f59256;\n  border-radius: 40px;\n  padding-top: 6.5px;\n  padding-bottom: 6.5px;\n  font-family: 'Manrope';\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  outline: none;\n  transition: transform ${props => props.theme.transition.first};\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    border: 2px solid ${p => p.theme.hoverButtonColor.primary};\n    background-color: ${p => p.theme.hoverButtonColor.primary};\n  }\n  @media ${device.tablet} {\n    margin-top: 16px;\n  }\n  @media ${device.desktop} {\n    padding-top: 10.5px;\n    padding-bottom: 10.5px;\n  }\n`;\n\nexport const RegisterBoxText = styled.div`\n  margin-top: 40px;\n`;\n\nexport const RegisterLinkText = styled.p`\n  font-family: 'Manrope';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  color: ${props => props.theme.fontColors.inputTextColor};\n  transition: transform ${props => props.theme.transition.first};\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n\nexport const ReqisterLoginLink = styled(NavLink)`\n  color: ${props => props.theme.fontColors.blueLink};\n  transition: transform ${props => props.theme.transition.first};\n  &:hover {\n    color: #4169e1;\n    cursor: pointer;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { register } from 'redux/auth/authOperations';\nimport {\n  FormError,\n  stepOneRegisterSchema,\n  stepTwoRegisterSchema,\n} from '../AuthValidation/RegisterValidation';\n\nimport {\n  RegisterFormContainer,\n  FormInput,\n  NextFormRegisterBtn,\n  SectionRegisterForm,\n  RegisterTitle,\n  RegisterLinkText,\n  RegisterBoxText,\n  ReqisterLoginLink,\n  BackFormRegisterBtn,\n  RegisterFormBox,\n  WrapInputPassword,\n  ShowPasswordIcon,\n  HidePasswordIcon,\n  PhoneInputField,\n} from './RegisterForm.styled';\nimport { ErrorText } from '../AuthValidation/ErrorMessageValidation.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [userData, setUserData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    city: '',\n    phone: '',\n  });\n\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const makeRequest = formData => {\n    const bodyRegister = {\n      email: formData.email,\n      password: formData.password,\n      name: formData.name,\n      city: formData.city,\n      phone: formData.phone,\n    };\n\n    dispatch(register(bodyRegister));\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setUserData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      makeRequest(newData);\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setUserData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const registerSteps = [\n    <RegisterStepOne\n      currentStep={currentStep}\n      nextStep={handleNextStep}\n      userData={userData}\n    />,\n    <RegisterStepTwo\n      currentStep={currentStep}\n      nextStep={handleNextStep}\n      prevStep={handlePrevStep}\n      userData={userData}\n    />,\n  ];\n\n  return (\n    <SectionRegisterForm currentStep={currentStep}>\n      {registerSteps[currentStep]}\n    </SectionRegisterForm>\n  );\n};\n\nconst RegisterStepOne = props => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n  const confirmPasswordInputId = nanoid();\n\n  const handleSubmit = values => {\n    props.nextStep(values);\n  };\n\n  const toogleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <RegisterFormContainer>\n      <RegisterFormBox>\n        <RegisterTitle>Registration</RegisterTitle>\n        <Formik\n          initialValues={props.userData}\n          validationSchema={stepOneRegisterSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isValid, dirty }) => (\n            <Form autoComplete=\"off\">\n              <FormInput\n                id={emailInputId}\n                name=\"email\"\n                placeholder=\"Email\"\n                autoComplete=\"on\"\n              />\n              <FormError name=\"email\" />\n              <WrapInputPassword>\n                <FormInput\n                  id={passwordInputId}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"off\"\n                />\n                {showPassword ? (\n                  <HidePasswordIcon onClick={toogleShowPassword} />\n                ) : (\n                  <ShowPasswordIcon onClick={toogleShowPassword} />\n                )}\n              </WrapInputPassword>\n              <FormError name=\"password\" />\n              <WrapInputPassword>\n                <FormInput\n                  id={confirmPasswordInputId}\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm Password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"off\"\n                />\n                {showPassword ? (\n                  <HidePasswordIcon onClick={toogleShowPassword} />\n                ) : (\n                  <ShowPasswordIcon onClick={toogleShowPassword} />\n                )}\n              </WrapInputPassword>\n              <FormError name=\"confirmPassword\" />\n              <NextFormRegisterBtn\n                currentStep={props.currentStep}\n                type=\"submit\"\n                disabled={!isValid}\n              >\n                Next\n              </NextFormRegisterBtn>\n            </Form>\n          )}\n        </Formik>\n        <RegisterBoxText>\n          <RegisterLinkText>\n            Already have an account?{' '}\n            <ReqisterLoginLink to=\"/login\">Login</ReqisterLoginLink>\n          </RegisterLinkText>\n        </RegisterBoxText>\n      </RegisterFormBox>\n    </RegisterFormContainer>\n  );\n};\n\nconst RegisterStepTwo = props => {\n  const nameInputId = nanoid();\n  const cityInputId = nanoid();\n  const phoneInputId = nanoid();\n\n  const handleSubmit = values => {\n    props.nextStep(values, true);\n  };\n\n  return (\n    <RegisterFormContainer>\n      <RegisterFormBox>\n        <RegisterTitle>Registration</RegisterTitle>\n        <Formik\n          initialValues={props.userData}\n          validationSchema={stepTwoRegisterSchema}\n          onSubmit={handleSubmit}\n        >\n          {({\n            values,\n            setFieldValue,\n            isValid,\n            dirty,\n            errors,\n            touched,\n            context,\n          }) => (\n            <Form autoComplete=\"off\">\n              <FormInput\n                id={nameInputId}\n                name=\"name\"\n                placeholder=\"Name\"\n                type=\"text\"\n                autoComplete=\"off\"\n              />\n              <FormError name=\"name\" />\n              <FormInput\n                id={cityInputId}\n                name=\"city\"\n                placeholder=\"City,region\"\n                type=\"text\"\n                autoComplete=\"off\"\n              />\n              <FormError name=\"city\" />\n\n              <FormInput\n                component={PhoneInputField}\n                type=\"text\"\n                id={phoneInputId}\n                name=\"phone\"\n                onChange={e => setFieldValue('phone', `+${e}`)}\n                value={values.phone}\n                error={Boolean(errors.phone) && Boolean(touched.phone)}\n                helperText={Boolean(touched.phone) && errors.phone}\n              />\n              <ErrorText>{errors.phone}</ErrorText>\n\n              <NextFormRegisterBtn\n                currentStep={props.currentStep}\n                type=\"submit\"\n                disabled={!isValid}\n              >\n                Register\n              </NextFormRegisterBtn>\n              <BackFormRegisterBtn\n                type=\"button\"\n                onClick={() => props.prevStep(values)}\n              >\n                Back\n              </BackFormRegisterBtn>\n            </Form>\n          )}\n        </Formik>\n        <RegisterBoxText>\n          <RegisterLinkText>\n            Already have an account?{' '}\n            <ReqisterLoginLink to=\"/login\">Login</ReqisterLoginLink>\n          </RegisterLinkText>\n        </RegisterBoxText>\n      </RegisterFormBox>\n    </RegisterFormContainer>\n  );\n};\n","import { RegisterForm } from 'components/Auth/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <main>\n      <title>Registration</title>\n      <RegisterForm />\n    </main>\n  );\n};\n\nexport default RegisterPage;\n","const size = {\n  mobile: '320px',\n  mobileTablet: '480px',\n  tablet: '768px',\n  desktop: '1280px',\n  preMobile: '319px',\n  preMobileTablet: '479px',\n  preTablet: '767px',\n  preDesktop: '1279px',\n};\nexport const device = {\n  mobile: `(min-width: ${size.mobile})`,\n  mobileTablet: `(min-width: ${size.mobileTablet})`,\n  tablet: `(min-width: ${size.tablet})`,\n  desktop: `(min-width: ${size.desktop})`,\n  preMobile: `(max-width: ${size.preMobile})`,\n  preMobileTablet: `(max-width: ${size.preMobileTablet})`,\n  preTablet: `(max-width: ${size.preTablet})`,\n  preDesktop: `(max-width: ${size.preDesktop})`,\n};\n"],"names":["ErrorText","styled","device","nameRules2","stepOneRegisterSchema","yup","shape","email","min","max","matches","required","password","confirmPassword","oneOf","stepTwoRegisterSchema","name","trim","city","phone","FormError","message","render","PhoneInputField","props","regions","country","value","onChange","inputStyle","fontFamily","fontWeight","color","letterSpacing","width","background","outline","border","padding","margin","height","left","containerStyle","marginTop","paddingTop","paddingBottom","paddingLeft","borderRadius","textAlign","buttonStyle","dropdownStyle","SectionRegisterForm","theme","backgrounds","input","currentStep","register_bg_step1_mob","register_bg_step2_mob","tablet_vector_3","tablet_vector_2","tablet_vector_4","tablet_vector_1","tablet_vector_5","tablet_vector_6","desktop_vector_1","desktop_vector_2","desktop_vector_3","RegisterFormContainer","RegisterFormBox","bodySecondary","RegisterTitle","fonts","fontColors","primary","FormInput","Field","inputTextColor","transition","first","p","hoverButtonColor","WrapInputPassword","ShowPasswordIcon","BiShow","HidePasswordIcon","BiHide","NextFormRegisterBtn","white","disabled","buttonPrimary","BackFormRegisterBtn","secondary","bodyPrimary","RegisterBoxText","RegisterLinkText","ReqisterLoginLink","NavLink","blueLink","RegisterForm","dispatch","useDispatch","useState","userData","setUserData","setCurrentStep","makeRequest","formData","bodyRegister","register","handleNextStep","newData","final","prev","registerSteps","RegisterStepOne","nextStep","RegisterStepTwo","prevStep","showPassword","setShowPassword","emailInputId","nanoid","passwordInputId","confirmPasswordInputId","toogleShowPassword","initialValues","validationSchema","onSubmit","values","isValid","dirty","autoComplete","id","placeholder","type","onClick","to","nameInputId","cityInputId","phoneInputId","setFieldValue","errors","touched","context","component","e","error","Boolean","helperText","size","mobile","mobileTablet","tablet","desktop","preMobile","preMobileTablet","preTablet","preDesktop"],"sourceRoot":""}